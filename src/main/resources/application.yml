server:
  port: 8080
spring:
  kafka:
#    bootstrap-servers: pkc-ymrq7.us-east-2.aws.confluent.cloud:9092
    properties:
      sasl:
#        mechanism: PLAIN
#        jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username='TWLDNAIWYVSTZ4HP' password='CEhJa+SaP2/v5ismJfK1JhtQzFp7Y4vP3D/Qypwd9Cp4J0iLIj0cLvaD/LeljnqZ';
      security:
#        protocol: SASL_SSL
      session.timeout.ms: 45000
    client-id: ecommerce-orders
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 2
    streams:
      replication-factor: 3
      application-id: stream-estoques

topic:
  name:
    old: orders
    new: ecommerce-orders
    resume: ecommerce-orders-resume
    resume-ktable: ecommerce-orders-resume-ktable
    users: ecommerce-orders-users
    join: ecommerce-orders-joins
    aggregate-in: ecommerce-orders-aggregate-in
    aggregate-out: ecommerce-orders-aggregate-out
    kafka-streams: ecommerce-orders-kafka-streams-in
